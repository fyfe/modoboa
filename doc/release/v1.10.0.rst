Version 1.10.0
==============

Upgrade to Version 1.10.0
-------------------------
Version 1.10.0 upgrades `Django <https://docs.djangoproject.com/en/1.11/releases/>`
to version 1.11 which requires all installed plugins to be upgraded to the
following minimum versions.

+---------------------------+-----------------+
| Extension                 | Minimum Version |
+===========================+=================+
| modoboa-amavis            | 1.2.0           |
+---------------------------+-----------------+
| modoboa-contacts          | 0.5.0           |
+---------------------------+-----------------+
| modoboa-dmarc             | 1.1.0           |
+---------------------------+-----------------+
| modoboa-imap-migration    | 1.2.0           |
+---------------------------+-----------------+
| modoboa-pdfcredentials    | 1.3.0           |
+---------------------------+-----------------+
| modoboa-postfix-autoreply | 1.4.0           |
+---------------------------+-----------------+
| modoboa-radicale          | 1.2.0           |
+---------------------------+-----------------+
| modoboa-sievefilters      | 1.4.0           |
+---------------------------+-----------------+
| modoboa-stats             | 1.4.0           |
+---------------------------+-----------------+
| modoboa-webmail           | 1.4.0           |
+---------------------------+-----------------+

*. Upgrade Modoboa
^^^^^^^^^^^^^^^^^^

.. sourcecode:: bash

  (venv)> pip install --upgrade <extension_name>==1.10.0

*. Upgrade extensions
^^^^^^^^^^^^^^^^^^^^^
To list the installed extensions run the following command.
.. sourcecode:: bash

  (venv)> pip freeze | grep "^modoboa-"

The update each entension using the following command replacing
`<extension_name>` with the name of the extension and `<miniumum_version>`
with the minimum version listed in the table above.

.. sourcecode:: bash

  (venv)> pip install --upgrade <extension_name>>=<minimum_version>

*. Modify :file:`settings.py`
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Make the following changes to :file:`settings.py`
* Add `'modoboa.transport'` to `MODOBOA_APPS`:

.. sourcecode:: python

  MODOBOA_APPS = (
   'modoboa',
   'modoboa.core',
   'modoboa.lib',
   'modoboa.admin',
   'modoboa.transport',
   'modoboa.relaydomains',
   'modoboa.limits',
   'modoboa.parameters',
  )

* Replace the following line:

.. sourcecode:: python

  MIDDLEWARE_CLASSES = (

  by:

.. sourcecode:: python

  MIDDLEWARE = (

* If you use the amavis plugin, make sure to include its configuration as
  follows:

.. sourcecode:: python

  from modoboa_amavis import settings as modoboa_amavis_settings
  modoboa_amavis_settings.apply(globals())

*. Update database and static content
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Run database migrations and update static content:

.. sourcecode:: bash

  (venv)> cd <modoboa_instance_dir>
  (venv)> python manage.py migrate
  (venv)> python manage.py collectstatic

*. Deployment checks
^^^^^^^^^^^^^^^^^^^^
Run Djangos deployment checks:

.. sourcecode:: bash

  (venv)> cd <modoboa_instance_dir>
  (venv)> python manage.py check --deploy

.. note::

  The `security.W001` warning can be ignored as this is handled by nginx.

*. Restart Modoboa
^^^^^^^^^^^^^^^^^^
For example if you installed Modoboa using the installer restart uwsgi

.. sourcecode:: bash

  (venv)> sudo service uwsgi restart

*. Update Postfix configuration
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
* Update postfix map files as follows:

.. sourcecode:: bash

  (venv)> rm -f <path>/modoboa-postfix-maps.chk
  (venv)> python manage.py generate_postfix_maps --force --destdir <path>

* Modify postfix's configuration as follows:

smtpd_sender_login_maps =
  <driver>:<path>/sql-sender-login-map.cf

transport_maps =
  <driver>:<path>/sql-transport.cf
  <driver>:<path>/sql-spliteddomains-transport.cf
  # other map files...

* Replace ``<driver>`` and ``<path>`` by your values.

* If ``transport_maps`` contains ``sql-relaydomains-transport.cf``, remove it.

* Reload Postfix configuration:

.. sourcecode:: bash

  (venv)> sudo service postfix reload

.* New cron job
^^^^^^^^^^^^^^^^
Add the following cron job in order to generate DKIM keys:

.. sourcecode:: bash

  # Generate DKIM keys (they will belong to the user running this job)
  *       *       *       *       *       root    $PYTHON $INSTANCE/manage.py modo manage_dkim_keys


Changes
-------
...
